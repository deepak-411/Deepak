"use client";

import { useState, useRef } from 'react';
import { Button } from "@/components/ui/button";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { aiVoiceGreetings } from "@/ai/flows/ai-voice-greetings";
import { useToast } from "@/hooks/use-toast";
import { Loader2, Sparkles, Volume2 } from "lucide-react";

export function AiVoiceGreeting() {
  const [open, setOpen] = useState(false);
  const [name, setName] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [audioUrl, setAudioUrl] = useState<string | null>(null);
  const audioRef = useRef<HTMLAudioElement>(null);
  const { toast } = useToast();

  const handleGenerateGreeting = async () => {
    if (!name.trim()) {
      toast({
        title: "Name is required",
        description: "Please enter your name to generate a greeting.",
        variant: "destructive",
      });
      return;
    }
    setIsLoading(true);
    setAudioUrl(null);
    try {
      const result = await aiVoiceGreetings({ name });
      setAudioUrl(result.media);
      toast({
        title: "Greeting Generated!",
        description: "Your personalized audio greeting is ready to play.",
      });
    } catch (error) {
      console.error(error);
      toast({
        title: "Error",
        description: "Failed to generate voice greeting. Please try again.",
        variant: "destructive",
      });
    } finally {
      setIsLoading(false);
    }
  };

  const handlePlay = () => {
    if (audioRef.current) {
        audioRef.current.play();
    }
  }

  return (
    <Dialog open={open} onOpenChange={setOpen}>
      <DialogTrigger asChild>
        <Button size="lg" variant="default" className="bg-gradient-to-r from-primary to-accent text-primary-foreground hover:opacity-90 transition-opacity duration-300 shadow-lg shadow-primary/30">
          <Sparkles className="mr-2 h-5 w-5" />
          Get Your AI Welcome
        </Button>
      </DialogTrigger>
      <DialogContent className="sm:max-w-[425px]">
        <DialogHeader>
          <DialogTitle>AI Voice Greeting</DialogTitle>
          <DialogDescription>
            Enter your name to receive a personalized welcome message generated by AI.
          </DialogDescription>
        </DialogHeader>
        <div className="grid gap-4 py-4">
          <div className="grid grid-cols-4 items-center gap-4">
            <Label htmlFor="name" className="text-right">
              Name
            </Label>
            <Input
              id="name"
              value={name}
              onChange={(e) => setName(e.target.value)}
              className="col-span-3"
              placeholder="e.g. Jane Doe"
            />
          </div>
          {audioUrl && (
            <div className="flex items-center justify-center">
              <audio ref={audioRef} src={audioUrl} className="hidden" />
              <Button onClick={handlePlay} variant="outline" size="lg">
                <Volume2 className="mr-2 h-5 w-5" /> Play Greeting
              </Button>
            </div>
          )}
        </div>
        <DialogFooter>
          <Button onClick={handleGenerateGreeting} disabled={isLoading}>
            {isLoading ? (
              <>
                <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                Generating...
              </>
            ) : (
              "Generate"
            )}
          </Button>
        </DialogFooter>
      </DialogContent>
    </Dialog>
  );
}
